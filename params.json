{
  "name": "pk-pass-display",
  "tagline": "",
  "body": "#PassKit Pass Display\r\n\r\n[![NPM version](https://img.shields.io/npm/v/pk-pass-display.svg)](https://npmjs.org/package/pk-pass-display)\r\n[![Bower version](https://img.shields.io/bower/v/pk-pass-display.svg)](https://github.com/PassKitInc/pk-pass-display)\r\n\r\n##Usage\r\n\r\nInclude in your index file:\r\n    \r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"node_modules/pk-pass-display/dist/pk-pass-display.min.css\">\r\n    </head>\r\n    <body>\r\n        <div data-ng-app=\"myApp\" data-ng-controller=\"passCtrl\">\r\n            <pk-apple-pass pass-id=\"{{passId}}\"></pk-apple-pass>\r\n        </div>\r\n        <script src=\"node_modules/angular/angular.min.js\"></script>\r\n        <script src=\"node_modules/moment/min/moment-with-locales.min.js\"></script>\r\n        <script src=\"node_modules/pk-pass-display/dist/pk-pass-display.min.js\"></script>\r\n        <script>\r\n            (function (angular) {\r\n                angular.module(\"myApp\", [\"pk-pass-display\"])\r\n                .config([\"$locationProvider\", function($locationProvider) {\r\n                    $locationProvider.html5Mode({enabled:true,requireBase:false});\r\n                }])\r\n                .controller(\"passCtrl\", [\"$scope\", \"$location\", passController]);\r\n    \r\n                function passController($scope, $location) {\r\n                    $scope.passId = $location.search().pid;\r\n                }\r\n            })(window.angular);\r\n        </script>\r\n    </body>\r\n    </html>\r\n\r\nUse as component (see index.html for example):\r\n\r\n    <pk-apple-pass pass-id=\"passId\"></pk-apple-pass>\r\n\r\nOptional attributes are:\r\n\r\n    language=\"en\" // can be any language code available on your pass\r\n    bg-color=\"blue\" // can be any css color\r\n    on-error=\"errorHandler(err)\" // function to handle error callback\r\n    on-loaded=\"loadedHandler(pass)\" // function to handle loaded callback\r\n\r\n###Note on the callback functions:\r\n\r\nFor angular components, the variable name in the view must match the name in the component. So `pass` and `err` must keep that name within the view.\r\n`on-loaded` passes back the `pass` object when loading is complete, `on-error` passes back an error string if there was an error loading the pass.\r\n\r\nExample error handling:\r\n\r\n    <pk-apple-pass pass-id=\"{{passId}}\" on-error=\"errorHandler(err)\"></pk-apple-pass>\r\n    .\r\n    .\r\n    .\r\n    function passController($scope, $location) {\r\n        $scope.passId = $location.search().pid;\r\n        $scope.errorHandler = function(errorMessage) {\r\n            alert(errorMessage);\r\n        }\r\n    }\r\n\r\n##Development\r\n\r\n(Requires Node.js https://nodejs.org).  \r\nMake sure npm is up to date (comes with Node.js).  \r\nRun `npm i`\r\n\r\n###Modifying\r\n\r\nTo have dist update while you modify the files:  \r\nRun `gulp watch` /dist will be updated whenever you save changes.\r\n\r\n###Deploying\r\n\r\nModify files as required.  \r\nRun `gulp` \"/dist\" will now contain updated files and package version can be updated.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}